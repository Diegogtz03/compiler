// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			shift(2), // program
			nil,      // id
			nil,      // ;
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // {
			nil,      // }
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // string
			nil,      // =
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // >
			nil,      // <
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // void
			nil,      // [
			nil,      // ]
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // program
			nil,          // id
			nil,          // ;
			nil,          // main
			nil,          // end
			nil,          // empty
			nil,          // var
			nil,          // :
			nil,          // ,
			nil,          // int
			nil,          // float
			nil,          // {
			nil,          // }
			nil,          // print
			nil,          // (
			nil,          // )
			nil,          // string
			nil,          // =
			nil,          // while
			nil,          // do
			nil,          // if
			nil,          // else
			nil,          // myint
			nil,          // myfloat
			nil,          // >
			nil,          // <
			nil,          // !=
			nil,          // +
			nil,          // -
			nil,          // *
			nil,          // /
			nil,          // void
			nil,          // [
			nil,          // ]
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			shift(3), // id
			nil,      // ;
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // {
			nil,      // }
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // string
			nil,      // =
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // >
			nil,      // <
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // void
			nil,      // [
			nil,      // ]
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			nil,      // id
			shift(4), // ;
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // {
			nil,      // }
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // string
			nil,      // =
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // >
			nil,      // <
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // void
			nil,      // [
			nil,      // ]
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(4), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			shift(8),  // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(9),  // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(4), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(9),  // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			shift(11), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(4), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(9),  // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(14), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			shift(15), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(17), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(3), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // :, reduce: Vars_PR
			shift(19), // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(20), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(17), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			shift(22), // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(23),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(14), // }, reduce: Body_PR
			shift(31),  // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			shift(32),  // while
			nil,        // do
			shift(33),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(34), // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(35), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(36), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			shift(37), // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			shift(38), // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // ␚, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(39), // (
			nil,       // )
			nil,       // string
			shift(40), // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			shift(41), // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(23),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(14), // }, reduce: Body_PR
			shift(31),  // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			shift(32),  // while
			nil,        // do
			shift(33),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(15), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(15), // }, reduce: Statement
			reduce(15), // print, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(15), // while, reduce: Statement
			nil,        // do
			reduce(15), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(16), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(16), // }, reduce: Statement
			reduce(16), // print, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(16), // while, reduce: Statement
			nil,        // do
			reduce(16), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(17), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(17), // }, reduce: Statement
			reduce(17), // print, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(17), // while, reduce: Statement
			nil,        // do
			reduce(17), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(18), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(18), // }, reduce: Statement
			reduce(18), // print, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(18), // while, reduce: Statement
			nil,        // do
			reduce(18), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(19), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(19), // }, reduce: Statement
			reduce(19), // print, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(19), // while, reduce: Statement
			nil,        // do
			reduce(19), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(43), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(44), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(45), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(47), // int
			shift(48), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // :, reduce: Vars_PR
			shift(19), // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(50), // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			shift(51), // [
			nil,       // ]
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			shift(55), // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(65), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(68), // myint
			shift(69), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(71), // +
			shift(72), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			reduce(12), // end, reduce: Body
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(13), // }, reduce: Body_PR
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			shift(75), // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(88), // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(10), // ;, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(11), // ;, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(6), // :, reduce: Vars_PR
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(90), // int
			shift(91), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(94), // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(95), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(45), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(45), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(45), // >, reduce: Fact
			reduce(45), // <, reduce: Fact
			reduce(45), // !=, reduce: Fact
			reduce(45), // +, reduce: Fact
			reduce(45), // -, reduce: Fact
			reduce(45), // *, reduce: Fact
			reduce(45), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(97),  // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(57), // ), reduce: F_call_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(99), // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(31), // ,, reduce: Expr
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			shift(100), // >
			shift(101), // <
			shift(102), // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(44), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(44), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(44), // >, reduce: Fact
			reduce(44), // <, reduce: Fact
			reduce(44), // !=, reduce: Fact
			reduce(44), // +, reduce: Fact
			reduce(44), // -, reduce: Fact
			reduce(44), // *, reduce: Fact
			reduce(44), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(29), // ,, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(29), // >, reduce: Cte
			reduce(29), // <, reduce: Cte
			reduce(29), // !=, reduce: Cte
			reduce(29), // +, reduce: Cte
			reduce(29), // -, reduce: Cte
			reduce(29), // *, reduce: Cte
			reduce(29), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(30), // ,, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(30), // >, reduce: Cte
			reduce(30), // <, reduce: Cte
			reduce(30), // !=, reduce: Cte
			reduce(30), // +, reduce: Cte
			reduce(30), // -, reduce: Cte
			reduce(30), // *, reduce: Cte
			reduce(30), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(35), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(35), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(35), // >, reduce: Exp
			reduce(35), // <, reduce: Exp
			reduce(35), // !=, reduce: Exp
			shift(103), // +
			shift(104), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(105), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(58),  // myint
			shift(59),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(107), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(58),  // myint
			shift(59),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(38), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(38), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(38), // >, reduce: Term
			reduce(38), // <, reduce: Term
			reduce(38), // !=, reduce: Term
			reduce(38), // +, reduce: Term
			reduce(38), // -, reduce: Term
			shift(109), // *
			shift(110), // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(45), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(45), // +, reduce: Fact
			reduce(45), // -, reduce: Fact
			reduce(45), // *, reduce: Fact
			reduce(45), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(112), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(44), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(44), // +, reduce: Fact
			reduce(44), // -, reduce: Fact
			reduce(44), // *, reduce: Fact
			reduce(44), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(29), // ;, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(29), // +, reduce: Cte
			reduce(29), // -, reduce: Cte
			reduce(29), // *, reduce: Cte
			reduce(29), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(30), // ;, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(30), // +, reduce: Cte
			reduce(30), // -, reduce: Cte
			reduce(30), // *, reduce: Cte
			reduce(30), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(35), // ;, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(113), // +
			shift(114), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(115), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(68),  // myint
			shift(69),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(117), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(68),  // myint
			shift(69),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(38), // ;, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(38), // +, reduce: Term
			reduce(38), // -, reduce: Term
			shift(119), // *
			shift(120), // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(121), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(121), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(45), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(45), // >, reduce: Fact
			reduce(45), // <, reduce: Fact
			reduce(45), // !=, reduce: Fact
			reduce(45), // +, reduce: Fact
			reduce(45), // -, reduce: Fact
			reduce(45), // *, reduce: Fact
			reduce(45), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(125), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(31), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			shift(126), // >
			shift(127), // <
			shift(128), // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(44), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(44), // >, reduce: Fact
			reduce(44), // <, reduce: Fact
			reduce(44), // !=, reduce: Fact
			reduce(44), // +, reduce: Fact
			reduce(44), // -, reduce: Fact
			reduce(44), // *, reduce: Fact
			reduce(44), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(29), // >, reduce: Cte
			reduce(29), // <, reduce: Cte
			reduce(29), // !=, reduce: Cte
			reduce(29), // +, reduce: Cte
			reduce(29), // -, reduce: Cte
			reduce(29), // *, reduce: Cte
			reduce(29), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(30), // >, reduce: Cte
			reduce(30), // <, reduce: Cte
			reduce(30), // !=, reduce: Cte
			reduce(30), // +, reduce: Cte
			reduce(30), // -, reduce: Cte
			reduce(30), // *, reduce: Cte
			reduce(30), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(35), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(35), // >, reduce: Exp
			reduce(35), // <, reduce: Exp
			reduce(35), // !=, reduce: Exp
			shift(129), // +
			shift(130), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(131), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(81),  // myint
			shift(82),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(133), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(81),  // myint
			shift(82),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(38), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(38), // >, reduce: Term
			reduce(38), // <, reduce: Term
			reduce(38), // !=, reduce: Term
			reduce(38), // +, reduce: Term
			reduce(38), // -, reduce: Term
			shift(135), // *
			shift(136), // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(137), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(138), // id
			nil,        // ;
			reduce(9),  // main, reduce: Vars_PR_PR
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(9),  // void, reduce: Vars_PR_PR
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(140), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(53), // ), reduce: Funcs_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(10), // ,, reduce: Type
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(10), // ), reduce: Type
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(11), // ,, reduce: Type
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(11), // ), reduce: Type
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(95), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			shift(143), // ]
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(144), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(23),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(14), // }, reduce: Body_PR
			shift(31),  // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			shift(32),  // while
			nil,        // do
			shift(33),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(146), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(148), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(54), // id, reduce: F_call
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(54), // }, reduce: F_call
			reduce(54), // print, reduce: F_call
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(54), // while, reduce: F_call
			nil,        // do
			reduce(54), // if, reduce: F_call
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(42), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(42), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(42), // >, reduce: Fact
			reduce(42), // <, reduce: Fact
			reduce(42), // !=, reduce: Fact
			reduce(42), // +, reduce: Fact
			reduce(42), // -, reduce: Fact
			reduce(42), // *, reduce: Fact
			reduce(42), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(46), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(46), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(46), // >, reduce: Fact
			reduce(46), // <, reduce: Fact
			reduce(46), // !=, reduce: Fact
			reduce(46), // +, reduce: Fact
			reduce(46), // -, reduce: Fact
			reduce(46), // *, reduce: Fact
			reduce(46), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(43), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(43), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(43), // >, reduce: Fact
			reduce(43), // <, reduce: Fact
			reduce(43), // !=, reduce: Fact
			reduce(43), // +, reduce: Fact
			reduce(43), // -, reduce: Fact
			reduce(43), // *, reduce: Fact
			reduce(43), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(47), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(47), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(47), // >, reduce: Fact
			reduce(47), // <, reduce: Fact
			reduce(47), // !=, reduce: Fact
			reduce(47), // +, reduce: Fact
			reduce(47), // -, reduce: Fact
			reduce(47), // *, reduce: Fact
			reduce(47), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(52), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(53), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(58), // myint
			shift(59), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(61), // +
			shift(62), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(165), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(25), // id, reduce: Assign
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(25), // }, reduce: Assign
			reduce(25), // print, reduce: Assign
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(25), // while, reduce: Assign
			nil,        // do
			reduce(25), // if, reduce: Assign
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(65), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(68), // myint
			shift(69), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(71), // +
			shift(72), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(65), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(68), // myint
			shift(69), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(71), // +
			shift(72), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(42), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(42), // +, reduce: Fact
			reduce(42), // -, reduce: Fact
			reduce(42), // *, reduce: Fact
			reduce(42), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(46), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(46), // +, reduce: Fact
			reduce(46), // -, reduce: Fact
			reduce(46), // *, reduce: Fact
			reduce(46), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(43), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(43), // +, reduce: Fact
			reduce(43), // -, reduce: Fact
			reduce(43), // *, reduce: Fact
			reduce(43), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(47), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(47), // +, reduce: Fact
			reduce(47), // -, reduce: Fact
			reduce(47), // *, reduce: Fact
			reduce(47), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(65), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(68), // myint
			shift(69), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(71), // +
			shift(72), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(65), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(68), // myint
			shift(69), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(71), // +
			shift(72), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(52),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(53),  // (
			nil,        // )
			shift(171), // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(58),  // myint
			shift(59),  // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(61),  // +
			shift(62),  // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(172), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(173), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(174), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			shift(175), // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(42), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(42), // >, reduce: Fact
			reduce(42), // <, reduce: Fact
			reduce(42), // !=, reduce: Fact
			reduce(42), // +, reduce: Fact
			reduce(42), // -, reduce: Fact
			reduce(42), // *, reduce: Fact
			reduce(42), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(46), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(46), // >, reduce: Fact
			reduce(46), // <, reduce: Fact
			reduce(46), // !=, reduce: Fact
			reduce(46), // +, reduce: Fact
			reduce(46), // -, reduce: Fact
			reduce(46), // *, reduce: Fact
			reduce(46), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(43), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(43), // >, reduce: Fact
			reduce(43), // <, reduce: Fact
			reduce(43), // !=, reduce: Fact
			reduce(43), // +, reduce: Fact
			reduce(43), // -, reduce: Fact
			reduce(43), // *, reduce: Fact
			reduce(43), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(47), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(47), // >, reduce: Fact
			reduce(47), // <, reduce: Fact
			reduce(47), // !=, reduce: Fact
			reduce(47), // +, reduce: Fact
			reduce(47), // -, reduce: Fact
			reduce(47), // *, reduce: Fact
			reduce(47), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			shift(193), // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // :, reduce: Vars_PR
			shift(19), // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(5), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(5), // void, reduce: Vars
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(196), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			shift(197), // ]
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(198), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // :, reduce: Vars_PR
			shift(19), // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			shift(200), // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(41), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(41), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(41), // >, reduce: Fact
			reduce(41), // <, reduce: Fact
			reduce(41), // !=, reduce: Fact
			reduce(41), // +, reduce: Fact
			reduce(41), // -, reduce: Fact
			reduce(41), // *, reduce: Fact
			reduce(41), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(97),  // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(57), // ), reduce: F_call_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(202), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(45), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(45), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(45), // +, reduce: Fact
			reduce(45), // -, reduce: Fact
			reduce(45), // *, reduce: Fact
			reduce(45), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(32), // ,, reduce: Expr
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(44), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(44), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(44), // +, reduce: Fact
			reduce(44), // -, reduce: Fact
			reduce(44), // *, reduce: Fact
			reduce(44), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(29), // ,, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(29), // +, reduce: Cte
			reduce(29), // -, reduce: Cte
			reduce(29), // *, reduce: Cte
			reduce(29), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(30), // ,, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(30), // +, reduce: Cte
			reduce(30), // -, reduce: Cte
			reduce(30), // *, reduce: Cte
			reduce(30), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(35), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(35), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(204), // +
			shift(205), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(206), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(208), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(38), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(38), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(38), // +, reduce: Term
			reduce(38), // -, reduce: Term
			shift(210), // *
			shift(211), // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(33), // ,, reduce: Expr
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(34), // ,, reduce: Expr
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(34), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(36), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(36), // >, reduce: Exp
			reduce(36), // <, reduce: Exp
			reduce(36), // !=, reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(37), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(37), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(37), // >, reduce: Exp
			reduce(37), // <, reduce: Exp
			reduce(37), // !=, reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(39), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(39), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(39), // >, reduce: Term
			reduce(39), // <, reduce: Term
			reduce(39), // !=, reduce: Term
			reduce(39), // +, reduce: Term
			reduce(39), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(40), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(40), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(40), // >, reduce: Term
			reduce(40), // <, reduce: Term
			reduce(40), // !=, reduce: Term
			reduce(40), // +, reduce: Term
			reduce(40), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(41), // ;, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(41), // +, reduce: Fact
			reduce(41), // -, reduce: Fact
			reduce(41), // *, reduce: Fact
			reduce(41), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(36), // ;, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(37), // ;, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(39), // ;, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(39), // +, reduce: Term
			reduce(39), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(40), // ;, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(40), // +, reduce: Term
			reduce(40), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(121), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(121), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(214), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(215), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(41), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(41), // >, reduce: Fact
			reduce(41), // <, reduce: Fact
			reduce(41), // !=, reduce: Fact
			reduce(41), // +, reduce: Fact
			reduce(41), // -, reduce: Fact
			reduce(41), // *, reduce: Fact
			reduce(41), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			shift(217), // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(45), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(45), // +, reduce: Fact
			reduce(45), // -, reduce: Fact
			reduce(45), // *, reduce: Fact
			reduce(45), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(76), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			shift(77), // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(81), // myint
			shift(82), // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			shift(84), // +
			shift(85), // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(32), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(44), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(44), // +, reduce: Fact
			reduce(44), // -, reduce: Fact
			reduce(44), // *, reduce: Fact
			reduce(44), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(29), // +, reduce: Cte
			reduce(29), // -, reduce: Cte
			reduce(29), // *, reduce: Cte
			reduce(29), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Cte
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(30), // +, reduce: Cte
			reduce(30), // -, reduce: Cte
			reduce(30), // *, reduce: Cte
			reduce(30), // /, reduce: Cte
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(35), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(219), // +
			shift(220), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(221), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(223), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(38), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(38), // +, reduce: Term
			reduce(38), // -, reduce: Term
			shift(225), // *
			shift(226), // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(34), // ), reduce: Expr
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(36), // >, reduce: Exp
			reduce(36), // <, reduce: Exp
			reduce(36), // !=, reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(37), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(37), // >, reduce: Exp
			reduce(37), // <, reduce: Exp
			reduce(37), // !=, reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(39), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(39), // >, reduce: Term
			reduce(39), // <, reduce: Term
			reduce(39), // !=, reduce: Term
			reduce(39), // +, reduce: Term
			reduce(39), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(40), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(40), // >, reduce: Term
			reduce(40), // <, reduce: Term
			reduce(40), // !=, reduce: Term
			reduce(40), // +, reduce: Term
			reduce(40), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(227), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			shift(228), // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(23),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(14), // }, reduce: Body_PR
			shift(31),  // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			shift(32),  // while
			nil,        // do
			shift(33),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(230), // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(231), // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			shift(232), // [
			nil,        // ]
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(233), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(48), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(48), // void, reduce: Funcs
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(234), // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			reduce(12), // ], reduce: Body
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(56), // ), reduce: F_call_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(55), // id, reduce: F_call
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(55), // }, reduce: F_call
			reduce(55), // print, reduce: F_call
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(55), // while, reduce: F_call
			nil,        // do
			reduce(55), // if, reduce: F_call
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(235), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(42), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(42), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(42), // +, reduce: Fact
			reduce(42), // -, reduce: Fact
			reduce(42), // *, reduce: Fact
			reduce(42), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(46), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(46), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(46), // +, reduce: Fact
			reduce(46), // -, reduce: Fact
			reduce(46), // *, reduce: Fact
			reduce(46), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(43), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(43), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(43), // +, reduce: Fact
			reduce(43), // -, reduce: Fact
			reduce(43), // *, reduce: Fact
			reduce(43), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(47), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(47), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(47), // +, reduce: Fact
			reduce(47), // -, reduce: Fact
			reduce(47), // *, reduce: Fact
			reduce(47), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(149), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(150), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(153), // myint
			shift(154), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(156), // +
			shift(157), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Print_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(20), // id, reduce: Print
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(20), // }, reduce: Print
			reduce(20), // print, reduce: Print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(20), // while, reduce: Print
			nil,        // do
			reduce(20), // if, reduce: Print
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(21), // id, reduce: Print
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(21), // }, reduce: Print
			reduce(21), // print, reduce: Print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(21), // while, reduce: Print
			nil,        // do
			reduce(21), // if, reduce: Print
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(240), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(23),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(14), // }, reduce: Body_PR
			shift(31),  // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			shift(32),  // while
			nil,        // do
			shift(33),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			shift(242), // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(42), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(42), // +, reduce: Fact
			reduce(42), // -, reduce: Fact
			reduce(42), // *, reduce: Fact
			reduce(42), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(46), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(46), // +, reduce: Fact
			reduce(46), // -, reduce: Fact
			reduce(46), // *, reduce: Fact
			reduce(46), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(43), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(43), // +, reduce: Fact
			reduce(43), // -, reduce: Fact
			reduce(43), // *, reduce: Fact
			reduce(43), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(47), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(47), // +, reduce: Fact
			reduce(47), // -, reduce: Fact
			reduce(47), // *, reduce: Fact
			reduce(47), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(176), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			shift(177), // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(180), // myint
			shift(181), // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			shift(183), // +
			shift(184), // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(27), // id, reduce: Condition
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(27), // }, reduce: Condition
			reduce(27), // print, reduce: Condition
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(27), // while, reduce: Condition
			nil,        // do
			reduce(27), // if, reduce: Condition
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			shift(217), // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			shift(248), // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(47), // int
			shift(48), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(90), // int
			shift(91), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(94), // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(95), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(49), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(49), // void, reduce: Funcs
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(47), // int
			shift(48), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(41), // ,, reduce: Fact
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(41), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(41), // +, reduce: Fact
			reduce(41), // -, reduce: Fact
			reduce(41), // *, reduce: Fact
			reduce(41), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(36), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(37), // ,, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(37), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(39), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(39), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(39), // +, reduce: Term
			reduce(39), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			reduce(40), // ,, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(40), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(40), // +, reduce: Term
			reduce(40), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(26), // id, reduce: Cycle
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(26), // }, reduce: Cycle
			reduce(26), // print, reduce: Cycle
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(26), // while, reduce: Cycle
			nil,        // do
			reduce(26), // if, reduce: Cycle
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			shift(254), // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(41), // ), reduce: Fact
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(41), // +, reduce: Fact
			reduce(41), // -, reduce: Fact
			reduce(41), // *, reduce: Fact
			reduce(41), // /, reduce: Fact
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(37), // ), reduce: Exp
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(39), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(39), // +, reduce: Term
			reduce(39), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(40), // ), reduce: Term
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			reduce(40), // +, reduce: Term
			reduce(40), // -, reduce: Term
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(255), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(12), // ;, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			reduce(12), // else, reduce: Body
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(256), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			shift(140), // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(53), // ), reduce: Funcs_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			shift(95), // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			shift(259), // ]
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(260), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(12), // ;, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(28), // id, reduce: Condition
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			reduce(28), // }, reduce: Condition
			reduce(28), // print, reduce: Condition
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			reduce(28), // while, reduce: Condition
			nil,        // do
			reduce(28), // if, reduce: Condition
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(138), // id
			nil,        // ;
			reduce(9),  // main, reduce: Vars_PR_PR
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(9),  // void, reduce: Vars_PR_PR
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			reduce(52), // ), reduce: Funcs_PR
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			shift(262), // ]
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(263), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(264), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			reduce(9),  // {, reduce: Vars_PR_PR
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(8), // main, reduce: Vars_PR_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(8), // void, reduce: Vars_PR_PR
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(266), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(50), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(50), // void, reduce: Funcs
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // :, reduce: Vars_PR
			shift(19), // ,
			nil,       // int
			nil,       // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			reduce(5), // {, reduce: Vars
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(51), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(51), // void, reduce: Funcs
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(268), // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(47), // int
			shift(48), // float
			nil,       // {
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(270), // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // {
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(264), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			reduce(9),  // {, reduce: Vars_PR_PR
			nil,        // }
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // string
			nil,        // =
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // >
			nil,        // <
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // void
			nil,        // [
			nil,        // ]
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			reduce(8), // {, reduce: Vars_PR_PR
			nil,       // }
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // string
			nil,       // =
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // >
			nil,       // <
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // void
			nil,       // [
			nil,       // ]
		},
	},
}
