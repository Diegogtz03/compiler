// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			shift(4), // program
			nil,      // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // two_dots
			nil,      // comma
			nil,      // int_rw
			nil,      // float_rw
			nil,      // curly_open
			nil,      // curly_close
			nil,      // print
			nil,      // parenthesis_open
			nil,      // parenthesis_close
			nil,      // string
			nil,      // equal
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // mult
			nil,      // div
			nil,      // void
			nil,      // bracket_open
			nil,      // bracket_close
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // program
			nil,          // id
			nil,          // semicolon
			nil,          // main
			nil,          // end
			nil,          // empty
			nil,          // var
			nil,          // two_dots
			nil,          // comma
			nil,          // int_rw
			nil,          // float_rw
			nil,          // curly_open
			nil,          // curly_close
			nil,          // print
			nil,          // parenthesis_open
			nil,          // parenthesis_close
			nil,          // string
			nil,          // equal
			nil,          // while
			nil,          // do
			nil,          // if
			nil,          // else
			nil,          // myint
			nil,          // myfloat
			nil,          // greater_than
			nil,          // less_than
			nil,          // not_equal
			nil,          // plus
			nil,          // minus
			nil,          // mult
			nil,          // div
			nil,          // void
			nil,          // bracket_open
			nil,          // bracket_close
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Start
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			shift(5), // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // two_dots
			nil,      // comma
			nil,      // int_rw
			nil,      // float_rw
			nil,      // curly_open
			nil,      // curly_close
			nil,      // print
			nil,      // parenthesis_open
			nil,      // parenthesis_close
			nil,      // string
			nil,      // equal
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // mult
			nil,      // div
			nil,      // void
			nil,      // bracket_open
			nil,      // bracket_close
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			reduce(2), // id, reduce: Program_Point
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			nil,      // id
			shift(6), // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // two_dots
			nil,      // comma
			nil,      // int_rw
			nil,      // float_rw
			nil,      // curly_open
			nil,      // curly_close
			nil,      // print
			nil,      // parenthesis_open
			nil,      // parenthesis_close
			nil,      // string
			nil,      // equal
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
			nil,      // myint
			nil,      // myfloat
			nil,      // greater_than
			nil,      // less_than
			nil,      // not_equal
			nil,      // plus
			nil,      // minus
			nil,      // mult
			nil,      // div
			nil,      // void
			nil,      // bracket_open
			nil,      // bracket_close
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(6), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			shift(10), // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			shift(11), // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(6), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			shift(11), // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			shift(13), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(6), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			shift(11), // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(15), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(16), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			shift(17), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(19), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(5), // main, reduce: Programa_PR
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // two_dots, reduce: Vars_PR
			shift(21), // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(22), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(19), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			shift(24), // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(25),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(16), // curly_close, reduce: Body_PR
			shift(33),  // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			shift(34),  // while
			nil,        // do
			shift(35),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(36), // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(37), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(38), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			shift(39), // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			shift(40), // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // ␚, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(41), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			shift(42), // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			shift(43), // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(25),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(16), // curly_close, reduce: Body_PR
			shift(33),  // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			shift(34),  // while
			nil,        // do
			shift(35),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(17), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(17), // curly_close, reduce: Statement
			reduce(17), // print, reduce: Statement
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(17), // while, reduce: Statement
			nil,        // do
			reduce(17), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(18), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(18), // curly_close, reduce: Statement
			reduce(18), // print, reduce: Statement
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(18), // while, reduce: Statement
			nil,        // do
			reduce(18), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(19), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(19), // curly_close, reduce: Statement
			reduce(19), // print, reduce: Statement
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(19), // while, reduce: Statement
			nil,        // do
			reduce(19), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(20), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(20), // curly_close, reduce: Statement
			reduce(20), // print, reduce: Statement
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(20), // while, reduce: Statement
			nil,        // do
			reduce(20), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(21), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(21), // curly_close, reduce: Statement
			reduce(21), // print, reduce: Statement
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(21), // while, reduce: Statement
			nil,        // do
			reduce(21), // if, reduce: Statement
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(45), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(46), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(47), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(49), // int_rw
			shift(50), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // two_dots, reduce: Vars_PR
			shift(21), // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(52), // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			shift(53), // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // ␚, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			shift(57), // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(66), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(67), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(70), // myint
			shift(71), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(73), // plus
			shift(74), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			reduce(14), // end, reduce: Body
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(15), // curly_close, reduce: Body_PR
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			shift(77), // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(90), // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(12), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(13), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // two_dots, reduce: Vars_PR
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(92), // int_rw
			shift(93), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(96), // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(97), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(47), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(47), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(47), // greater_than, reduce: Fact
			reduce(47), // less_than, reduce: Fact
			reduce(47), // not_equal, reduce: Fact
			reduce(47), // plus, reduce: Fact
			reduce(47), // minus, reduce: Fact
			reduce(47), // mult, reduce: Fact
			reduce(47), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(99),  // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(59), // parenthesis_close, reduce: F_call_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(101), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(33), // comma, reduce: Expr
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(33), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			shift(102), // greater_than
			shift(103), // less_than
			shift(104), // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(46), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(46), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(46), // greater_than, reduce: Fact
			reduce(46), // less_than, reduce: Fact
			reduce(46), // not_equal, reduce: Fact
			reduce(46), // plus, reduce: Fact
			reduce(46), // minus, reduce: Fact
			reduce(46), // mult, reduce: Fact
			reduce(46), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(31), // comma, reduce: Cte
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(31), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(31), // greater_than, reduce: Cte
			reduce(31), // less_than, reduce: Cte
			reduce(31), // not_equal, reduce: Cte
			reduce(31), // plus, reduce: Cte
			reduce(31), // minus, reduce: Cte
			reduce(31), // mult, reduce: Cte
			reduce(31), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(32), // comma, reduce: Cte
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(32), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(32), // greater_than, reduce: Cte
			reduce(32), // less_than, reduce: Cte
			reduce(32), // not_equal, reduce: Cte
			reduce(32), // plus, reduce: Cte
			reduce(32), // minus, reduce: Cte
			reduce(32), // mult, reduce: Cte
			reduce(32), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(37), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(37), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(37), // greater_than, reduce: Exp
			reduce(37), // less_than, reduce: Exp
			reduce(37), // not_equal, reduce: Exp
			shift(105), // plus
			shift(106), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(107), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(60),  // myint
			shift(61),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(109), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(60),  // myint
			shift(61),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(40), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(40), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(40), // greater_than, reduce: Term
			reduce(40), // less_than, reduce: Term
			reduce(40), // not_equal, reduce: Term
			reduce(40), // plus, reduce: Term
			reduce(40), // minus, reduce: Term
			shift(111), // mult
			shift(112), // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Fact
			reduce(47), // minus, reduce: Fact
			reduce(47), // mult, reduce: Fact
			reduce(47), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(114), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(46), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Fact
			reduce(46), // minus, reduce: Fact
			reduce(46), // mult, reduce: Fact
			reduce(46), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(31), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(31), // plus, reduce: Cte
			reduce(31), // minus, reduce: Cte
			reduce(31), // mult, reduce: Cte
			reduce(31), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(32), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(32), // plus, reduce: Cte
			reduce(32), // minus, reduce: Cte
			reduce(32), // mult, reduce: Cte
			reduce(32), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(37), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(115), // plus
			shift(116), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(117), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(70),  // myint
			shift(71),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(119), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(70),  // myint
			shift(71),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(40), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Term
			reduce(40), // minus, reduce: Term
			shift(121), // mult
			shift(122), // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(123), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(26), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(123), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(26), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(47), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(47), // greater_than, reduce: Fact
			reduce(47), // less_than, reduce: Fact
			reduce(47), // not_equal, reduce: Fact
			reduce(47), // plus, reduce: Fact
			reduce(47), // minus, reduce: Fact
			reduce(47), // mult, reduce: Fact
			reduce(47), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(127), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(33), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			shift(128), // greater_than
			shift(129), // less_than
			shift(130), // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(46), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(46), // greater_than, reduce: Fact
			reduce(46), // less_than, reduce: Fact
			reduce(46), // not_equal, reduce: Fact
			reduce(46), // plus, reduce: Fact
			reduce(46), // minus, reduce: Fact
			reduce(46), // mult, reduce: Fact
			reduce(46), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(31), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(31), // greater_than, reduce: Cte
			reduce(31), // less_than, reduce: Cte
			reduce(31), // not_equal, reduce: Cte
			reduce(31), // plus, reduce: Cte
			reduce(31), // minus, reduce: Cte
			reduce(31), // mult, reduce: Cte
			reduce(31), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(32), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(32), // greater_than, reduce: Cte
			reduce(32), // less_than, reduce: Cte
			reduce(32), // not_equal, reduce: Cte
			reduce(32), // plus, reduce: Cte
			reduce(32), // minus, reduce: Cte
			reduce(32), // mult, reduce: Cte
			reduce(32), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(37), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(37), // greater_than, reduce: Exp
			reduce(37), // less_than, reduce: Exp
			reduce(37), // not_equal, reduce: Exp
			shift(131), // plus
			shift(132), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(133), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(83),  // myint
			shift(84),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(135), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(83),  // myint
			shift(84),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(40), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(40), // greater_than, reduce: Term
			reduce(40), // less_than, reduce: Term
			reduce(40), // not_equal, reduce: Term
			reduce(40), // plus, reduce: Term
			reduce(40), // minus, reduce: Term
			shift(137), // mult
			shift(138), // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(139), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(140), // id
			nil,        // semicolon
			reduce(11), // main, reduce: Vars_PR_PR
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(11), // void, reduce: Vars_PR_PR
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(142), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(55), // parenthesis_close, reduce: Funcs_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(12), // comma, reduce: Type
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(12), // parenthesis_close, reduce: Type
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(13), // comma, reduce: Type
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(13), // parenthesis_close, reduce: Type
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(97), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			shift(145), // bracket_close
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(146), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(25),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(16), // curly_close, reduce: Body_PR
			shift(33),  // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			shift(34),  // while
			nil,        // do
			shift(35),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(148), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(150), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(56), // id, reduce: F_call
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(56), // curly_close, reduce: F_call
			reduce(56), // print, reduce: F_call
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(56), // while, reduce: F_call
			nil,        // do
			reduce(56), // if, reduce: F_call
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(44), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(44), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(44), // greater_than, reduce: Fact
			reduce(44), // less_than, reduce: Fact
			reduce(44), // not_equal, reduce: Fact
			reduce(44), // plus, reduce: Fact
			reduce(44), // minus, reduce: Fact
			reduce(44), // mult, reduce: Fact
			reduce(44), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(48), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(48), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(48), // greater_than, reduce: Fact
			reduce(48), // less_than, reduce: Fact
			reduce(48), // not_equal, reduce: Fact
			reduce(48), // plus, reduce: Fact
			reduce(48), // minus, reduce: Fact
			reduce(48), // mult, reduce: Fact
			reduce(48), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(45), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(45), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(45), // greater_than, reduce: Fact
			reduce(45), // less_than, reduce: Fact
			reduce(45), // not_equal, reduce: Fact
			reduce(45), // plus, reduce: Fact
			reduce(45), // minus, reduce: Fact
			reduce(45), // mult, reduce: Fact
			reduce(45), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(49), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(49), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(49), // greater_than, reduce: Fact
			reduce(49), // less_than, reduce: Fact
			reduce(49), // not_equal, reduce: Fact
			reduce(49), // plus, reduce: Fact
			reduce(49), // minus, reduce: Fact
			reduce(49), // mult, reduce: Fact
			reduce(49), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(55), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(60), // myint
			shift(61), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(63), // plus
			shift(64), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(167), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(27), // id, reduce: Assign
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(27), // curly_close, reduce: Assign
			reduce(27), // print, reduce: Assign
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(27), // while, reduce: Assign
			nil,        // do
			reduce(27), // if, reduce: Assign
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(66), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(67), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(70), // myint
			shift(71), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(73), // plus
			shift(74), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(66), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(67), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(70), // myint
			shift(71), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(73), // plus
			shift(74), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(44), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(44), // plus, reduce: Fact
			reduce(44), // minus, reduce: Fact
			reduce(44), // mult, reduce: Fact
			reduce(44), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(48), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(48), // plus, reduce: Fact
			reduce(48), // minus, reduce: Fact
			reduce(48), // mult, reduce: Fact
			reduce(48), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(45), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Fact
			reduce(45), // minus, reduce: Fact
			reduce(45), // mult, reduce: Fact
			reduce(45), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(49), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(49), // plus, reduce: Fact
			reduce(49), // minus, reduce: Fact
			reduce(49), // mult, reduce: Fact
			reduce(49), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(66), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(67), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(70), // myint
			shift(71), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(73), // plus
			shift(74), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(66), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(67), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(70), // myint
			shift(71), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(73), // plus
			shift(74), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(54),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(55),  // parenthesis_open
			nil,        // parenthesis_close
			shift(173), // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(60),  // myint
			shift(61),  // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(63),  // plus
			shift(64),  // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(174), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(175), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(176), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			shift(177), // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(44), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(44), // greater_than, reduce: Fact
			reduce(44), // less_than, reduce: Fact
			reduce(44), // not_equal, reduce: Fact
			reduce(44), // plus, reduce: Fact
			reduce(44), // minus, reduce: Fact
			reduce(44), // mult, reduce: Fact
			reduce(44), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(48), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(48), // greater_than, reduce: Fact
			reduce(48), // less_than, reduce: Fact
			reduce(48), // not_equal, reduce: Fact
			reduce(48), // plus, reduce: Fact
			reduce(48), // minus, reduce: Fact
			reduce(48), // mult, reduce: Fact
			reduce(48), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(45), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(45), // greater_than, reduce: Fact
			reduce(45), // less_than, reduce: Fact
			reduce(45), // not_equal, reduce: Fact
			reduce(45), // plus, reduce: Fact
			reduce(45), // minus, reduce: Fact
			reduce(45), // mult, reduce: Fact
			reduce(45), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(49), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(49), // greater_than, reduce: Fact
			reduce(49), // less_than, reduce: Fact
			reduce(49), // not_equal, reduce: Fact
			reduce(49), // plus, reduce: Fact
			reduce(49), // minus, reduce: Fact
			reduce(49), // mult, reduce: Fact
			reduce(49), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			shift(195), // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // two_dots, reduce: Vars_PR
			shift(21), // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(7), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			reduce(7), // void, reduce: Vars
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(197), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(198), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			shift(199), // bracket_close
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(200), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // two_dots, reduce: Vars_PR
			shift(21), // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			shift(202), // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(43), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(43), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(43), // greater_than, reduce: Fact
			reduce(43), // less_than, reduce: Fact
			reduce(43), // not_equal, reduce: Fact
			reduce(43), // plus, reduce: Fact
			reduce(43), // minus, reduce: Fact
			reduce(43), // mult, reduce: Fact
			reduce(43), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(99),  // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(59), // parenthesis_close, reduce: F_call_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(204), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(47), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(47), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Fact
			reduce(47), // minus, reduce: Fact
			reduce(47), // mult, reduce: Fact
			reduce(47), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(34), // comma, reduce: Expr
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(34), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(46), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(46), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Fact
			reduce(46), // minus, reduce: Fact
			reduce(46), // mult, reduce: Fact
			reduce(46), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(31), // comma, reduce: Cte
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(31), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(31), // plus, reduce: Cte
			reduce(31), // minus, reduce: Cte
			reduce(31), // mult, reduce: Cte
			reduce(31), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(32), // comma, reduce: Cte
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(32), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(32), // plus, reduce: Cte
			reduce(32), // minus, reduce: Cte
			reduce(32), // mult, reduce: Cte
			reduce(32), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(37), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(37), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(206), // plus
			shift(207), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(208), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(210), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(40), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(40), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Term
			reduce(40), // minus, reduce: Term
			shift(212), // mult
			shift(213), // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(35), // comma, reduce: Expr
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(35), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(36), // comma, reduce: Expr
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(36), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(38), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(38), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(38), // greater_than, reduce: Exp
			reduce(38), // less_than, reduce: Exp
			reduce(38), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(39), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(39), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(39), // greater_than, reduce: Exp
			reduce(39), // less_than, reduce: Exp
			reduce(39), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(41), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(41), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(41), // greater_than, reduce: Term
			reduce(41), // less_than, reduce: Term
			reduce(41), // not_equal, reduce: Term
			reduce(41), // plus, reduce: Term
			reduce(41), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(42), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(42), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(42), // greater_than, reduce: Term
			reduce(42), // less_than, reduce: Term
			reduce(42), // not_equal, reduce: Term
			reduce(42), // plus, reduce: Term
			reduce(42), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: Fact
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(43), // plus, reduce: Fact
			reduce(43), // minus, reduce: Fact
			reduce(43), // mult, reduce: Fact
			reduce(43), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(38), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(39), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(41), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Term
			reduce(41), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(42), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(42), // plus, reduce: Term
			reduce(42), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(123), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(26), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(123), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(26), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(216), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(217), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(43), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(43), // greater_than, reduce: Fact
			reduce(43), // less_than, reduce: Fact
			reduce(43), // not_equal, reduce: Fact
			reduce(43), // plus, reduce: Fact
			reduce(43), // minus, reduce: Fact
			reduce(43), // mult, reduce: Fact
			reduce(43), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			shift(219), // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(47), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(47), // plus, reduce: Fact
			reduce(47), // minus, reduce: Fact
			reduce(47), // mult, reduce: Fact
			reduce(47), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			shift(79), // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			shift(83), // myint
			shift(84), // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			shift(86), // plus
			shift(87), // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(34), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(46), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(46), // plus, reduce: Fact
			reduce(46), // minus, reduce: Fact
			reduce(46), // mult, reduce: Fact
			reduce(46), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(31), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(31), // plus, reduce: Cte
			reduce(31), // minus, reduce: Cte
			reduce(31), // mult, reduce: Cte
			reduce(31), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(32), // parenthesis_close, reduce: Cte
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(32), // plus, reduce: Cte
			reduce(32), // minus, reduce: Cte
			reduce(32), // mult, reduce: Cte
			reduce(32), // div, reduce: Cte
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(37), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(221), // plus
			shift(222), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(223), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(225), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(40), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(40), // plus, reduce: Term
			reduce(40), // minus, reduce: Term
			shift(227), // mult
			shift(228), // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(35), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(36), // parenthesis_close, reduce: Expr
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(38), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(38), // greater_than, reduce: Exp
			reduce(38), // less_than, reduce: Exp
			reduce(38), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(39), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(39), // greater_than, reduce: Exp
			reduce(39), // less_than, reduce: Exp
			reduce(39), // not_equal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(41), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(41), // greater_than, reduce: Term
			reduce(41), // less_than, reduce: Term
			reduce(41), // not_equal, reduce: Term
			reduce(41), // plus, reduce: Term
			reduce(41), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(42), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			reduce(42), // greater_than, reduce: Term
			reduce(42), // less_than, reduce: Term
			reduce(42), // not_equal, reduce: Term
			reduce(42), // plus, reduce: Term
			reduce(42), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(229), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			shift(230), // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(25),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(16), // curly_close, reduce: Body_PR
			shift(33),  // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			shift(34),  // while
			nil,        // do
			shift(35),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(232), // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(233), // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			shift(234), // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(235), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(50), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(50), // void, reduce: Funcs
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(236), // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			reduce(14), // bracket_close, reduce: Body
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(58), // parenthesis_close, reduce: F_call_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(57), // id, reduce: F_call
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(57), // curly_close, reduce: F_call
			reduce(57), // print, reduce: F_call
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(57), // while, reduce: F_call
			nil,        // do
			reduce(57), // if, reduce: F_call
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(237), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(44), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(44), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(44), // plus, reduce: Fact
			reduce(44), // minus, reduce: Fact
			reduce(44), // mult, reduce: Fact
			reduce(44), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(48), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(48), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(48), // plus, reduce: Fact
			reduce(48), // minus, reduce: Fact
			reduce(48), // mult, reduce: Fact
			reduce(48), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(45), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(45), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Fact
			reduce(45), // minus, reduce: Fact
			reduce(45), // mult, reduce: Fact
			reduce(45), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(49), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(49), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(49), // plus, reduce: Fact
			reduce(49), // minus, reduce: Fact
			reduce(49), // mult, reduce: Fact
			reduce(49), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(151), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(152), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(155), // myint
			shift(156), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(158), // plus
			shift(159), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(24), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(25), // parenthesis_close, reduce: Print_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(22), // id, reduce: Print
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(22), // curly_close, reduce: Print
			reduce(22), // print, reduce: Print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(22), // while, reduce: Print
			nil,        // do
			reduce(22), // if, reduce: Print
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(23), // id, reduce: Print
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(23), // curly_close, reduce: Print
			reduce(23), // print, reduce: Print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(23), // while, reduce: Print
			nil,        // do
			reduce(23), // if, reduce: Print
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(242), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(25),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(16), // curly_close, reduce: Body_PR
			shift(33),  // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			shift(34),  // while
			nil,        // do
			shift(35),  // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			shift(244), // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(44), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(44), // plus, reduce: Fact
			reduce(44), // minus, reduce: Fact
			reduce(44), // mult, reduce: Fact
			reduce(44), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(48), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(48), // plus, reduce: Fact
			reduce(48), // minus, reduce: Fact
			reduce(48), // mult, reduce: Fact
			reduce(48), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(45), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(45), // plus, reduce: Fact
			reduce(45), // minus, reduce: Fact
			reduce(45), // mult, reduce: Fact
			reduce(45), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(49), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(49), // plus, reduce: Fact
			reduce(49), // minus, reduce: Fact
			reduce(49), // mult, reduce: Fact
			reduce(49), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(178), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			shift(179), // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			shift(182), // myint
			shift(183), // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			shift(185), // plus
			shift(186), // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(29), // id, reduce: Condition
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(29), // curly_close, reduce: Condition
			reduce(29), // print, reduce: Condition
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(29), // while, reduce: Condition
			nil,        // do
			reduce(29), // if, reduce: Condition
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			shift(219), // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			shift(250), // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(49), // int_rw
			shift(50), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(92), // int_rw
			shift(93), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(96), // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(97), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(51), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(51), // void, reduce: Funcs
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(49), // int_rw
			shift(50), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(43), // comma, reduce: Fact
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(43), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(43), // plus, reduce: Fact
			reduce(43), // minus, reduce: Fact
			reduce(43), // mult, reduce: Fact
			reduce(43), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(38), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(38), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(39), // comma, reduce: Exp
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(39), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(41), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(41), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Term
			reduce(41), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			reduce(42), // comma, reduce: Term
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(42), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(42), // plus, reduce: Term
			reduce(42), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(28), // id, reduce: Cycle
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(28), // curly_close, reduce: Cycle
			reduce(28), // print, reduce: Cycle
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(28), // while, reduce: Cycle
			nil,        // do
			reduce(28), // if, reduce: Cycle
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			shift(256), // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(43), // parenthesis_close, reduce: Fact
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(43), // plus, reduce: Fact
			reduce(43), // minus, reduce: Fact
			reduce(43), // mult, reduce: Fact
			reduce(43), // div, reduce: Fact
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(38), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(39), // parenthesis_close, reduce: Exp
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(41), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(41), // plus, reduce: Term
			reduce(41), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(42), // parenthesis_close, reduce: Term
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			reduce(42), // plus, reduce: Term
			reduce(42), // minus, reduce: Term
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(257), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(14), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			reduce(14), // else, reduce: Body
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(258), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			shift(142), // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(55), // parenthesis_close, reduce: Funcs_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			shift(97), // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			shift(261), // bracket_close
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(262), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(14), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(30), // id, reduce: Condition
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			reduce(30), // curly_close, reduce: Condition
			reduce(30), // print, reduce: Condition
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			reduce(30), // while, reduce: Condition
			nil,        // do
			reduce(30), // if, reduce: Condition
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(140), // id
			nil,        // semicolon
			reduce(11), // main, reduce: Vars_PR_PR
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(11), // void, reduce: Vars_PR_PR
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			reduce(54), // parenthesis_close, reduce: Funcs_PR
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			shift(264), // bracket_close
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(265), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(266), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			reduce(11), // curly_open, reduce: Vars_PR_PR
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(10), // main, reduce: Vars_PR_PR
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(10), // void, reduce: Vars_PR_PR
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(268), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(52), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(52), // void, reduce: Funcs
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // two_dots, reduce: Vars_PR
			shift(21), // comma
			nil,       // int_rw
			nil,       // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			nil,       // int_rw
			nil,       // float_rw
			reduce(7), // curly_open, reduce: Vars
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(53), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			reduce(53), // void, reduce: Funcs
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(270), // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // two_dots
			nil,       // comma
			shift(49), // int_rw
			shift(50), // float_rw
			nil,       // curly_open
			nil,       // curly_close
			nil,       // print
			nil,       // parenthesis_open
			nil,       // parenthesis_close
			nil,       // string
			nil,       // equal
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
			nil,       // myint
			nil,       // myfloat
			nil,       // greater_than
			nil,       // less_than
			nil,       // not_equal
			nil,       // plus
			nil,       // minus
			nil,       // mult
			nil,       // div
			nil,       // void
			nil,       // bracket_open
			nil,       // bracket_close
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(272), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			nil,        // curly_open
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S272
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(266), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			reduce(11), // curly_open, reduce: Vars_PR_PR
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
	actionRow{ // S273
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // two_dots
			nil,        // comma
			nil,        // int_rw
			nil,        // float_rw
			reduce(10), // curly_open, reduce: Vars_PR_PR
			nil,        // curly_close
			nil,        // print
			nil,        // parenthesis_open
			nil,        // parenthesis_close
			nil,        // string
			nil,        // equal
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
			nil,        // myint
			nil,        // myfloat
			nil,        // greater_than
			nil,        // less_than
			nil,        // not_equal
			nil,        // plus
			nil,        // minus
			nil,        // mult
			nil,        // div
			nil,        // void
			nil,        // bracket_open
			nil,        // bracket_close
		},
	},
}
